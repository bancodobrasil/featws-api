basePath: /api/v1
definitions:
  github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet:
    properties:
      description:
        type: string
      features:
        items:
          additionalProperties: true
          type: object
        type: array
      hasStringRule:
        type: boolean
      id:
        type: integer
      name:
        type: string
      parameters:
        items:
          additionalProperties: true
          type: object
        type: array
      rules:
        additionalProperties: true
        type: object
      slug:
        type: string
      version:
        type: string
    required:
    - name
    type: object
  v1.Error:
    properties:
      error: {}
      validation_errors:
        items:
          $ref: '#/definitions/v1.ValidationError'
        type: array
    type: object
  v1.ValidationError:
    properties:
      error:
        type: string
      field:
        type: string
      tag:
        type: string
    type: object
host: localhost:9007
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: |
    Este projeto consiste em uma API cujo objetivo é fornecer operações para gerenciamento de repositórios e folhas de regra do sistema FeatWS. Através da API, é possível interagir entre a interface de usuário (UI) e o banco de dados, permitindo diversas interações, como as seguintes:
    - [Post] Criação da Folha de Regra;
    - [Get] Listar das Folhas de Regra;
    - [Get] Obter folha de regra por ID;
    - [Put] Atualizar uma folha de regra por ID;
    - [Delete] Deletar uma folha de regra por ID.

    Antes de realizar as requisições no Swagger, é necessário autorizar o acesso clicando no botão **Authorize**, ao lado, e inserindo a senha correspondente. Após inserir o campo **value** e clicar no botão **Authorize**, o Swagger estará disponível para ser utilizado.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FeatWS API
  version: "1.0"
paths:
  /rulesheets:
    post:
      consumes:
      - application/json
      description: |-
        Nessa operação cria uma folha de regra no banco de dados do FeatWS. Para realizar a criação é necessário completar a folha de regra, com no mínimo:
        - **nome** no parâmetro *name*;
        - **slug** no parâmetro *slug*;
        - **descrição** no parâmetro *description*.

        ```
        {
        "description": "teste no Swagger da API do FeatWS",
        "name": "teste Swagger API",
        "slug": "teste_Swagger_API"
        }
        ```
        Ambos esses parâmetros devem ser uma string, ou seja, deve estar entre "aspas". Não é possível ter uma folha de regra com o mesmo nome de outra.
      parameters:
      - description: Rulesheet body
        in: body
        name: Rulesheet
        required: true
        schema:
          $ref: '#/definitions/github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: token access
              type: string
          schema:
            $ref: '#/definitions/github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet'
        "400":
          description: Bad Format
          schema:
            $ref: '#/definitions/v1.Error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.Error'
      security:
      - Authentication Api Key: []
      - Authentication Bearer Token: []
      summary: Criação de Folha de Regra
      tags:
      - Rulesheet
  /rulesheets/:
    get:
      consumes:
      - application/json
      description: |-
        É possível listar as folhas de regra de algumas maneiras como veremos a seguir:

        - **Sem nenhum parâmetro:** Ao realizar a chamada do endpoint sem a passagem de parâmetros, todas as folhas de regra existentes serão retornadas, contendo informações como nome, ID, e caso estejam disponíveis, descrição e slug.
        - **Usando o *count*:** Ao habilitar o *count* para *True* será retornado do endpoint o número de Folhas de Regras existentes.
        - **Usando o *limit*:** Ao utilizar o parâmetro *limit* deve-se especificar o número máximo de respostas desejadas que serão retornadas pela array.
        - **Usando o *page*:** Ao utilizar o parâmetro *page*, serão retornadas as folhas de regra correspondentes a essa página, onde as folhas são ordenadas em ordem crescente pelo seu ID.
      parameters:
      - description: Total of results
        in: query
        name: count
        type: boolean
      - description: Max length of the array returned
        in: query
        name: limit
        type: integer
      - description: Page number that is multiplied by 'limit' to calculate the offset
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: token access
              type: string
          schema:
            items:
              $ref: '#/definitions/github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet'
            type: array
        "400":
          description: Bad Format
          schema:
            $ref: '#/definitions/v1.Error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.Error'
      security:
      - Authentication Api Key: []
      - Authentication Bearer Token: []
      summary: Listar as Folhas de Regra
      tags:
      - Rulesheet
  /rulesheets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Rulesheet by ID description
      parameters:
      - description: Rulesheet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: token access
              type: string
          schema:
            type: string
        "400":
          description: Bad Format
          schema:
            $ref: '#/definitions/v1.Error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.Error'
      security:
      - Authentication Api Key: []
      - Authentication Bearer Token: []
      summary: Delete Rulesheet by ID
      tags:
      - Rulesheet
    get:
      consumes:
      - application/json
      description: Get Rulesheet by ID description
      parameters:
      - description: Rulesheet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: token access
              type: string
          schema:
            items:
              $ref: '#/definitions/github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet'
            type: array
        "400":
          description: Bad Format
          schema:
            $ref: '#/definitions/v1.Error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.Error'
      security:
      - Authentication Api Key: []
      - Authentication Bearer Token: []
      summary: Get Rulesheet by ID
      tags:
      - Rulesheet
    put:
      consumes:
      - application/json
      description: Update Rulesheet by ID description
      parameters:
      - description: Rulesheet ID
        in: path
        name: id
        required: true
        type: string
      - description: Rulesheet body
        in: body
        name: rulesheet
        required: true
        schema:
          $ref: '#/definitions/github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: token access
              type: string
          schema:
            items:
              $ref: '#/definitions/github_com_bancodobrasil_featws-api_payloads_v1.Rulesheet'
            type: array
        "400":
          description: Bad Format
          schema:
            $ref: '#/definitions/v1.Error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.Error'
      security:
      - Authentication Api Key: []
      - Authentication Bearer Token: []
      summary: Update Rulesheet by ID
      tags:
      - Rulesheet
securityDefinitions:
  Authentication Api Key:
    in: header
    name: X-API-Key
    type: apiKey
  Authentication Bearer Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
